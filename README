PURPOSES
  collects traffic of a http-base distributed system
  easily distributable (small C agent)

  self-documenting diagramming system
  quick visualization of system health
  potentially scaling control system

COMPONENTS
  Agent
    C based tcp sniffer that finds http headers and collects data
    registers known services running on server
  Processing Server
    express server based for collecting and processing data(possibly redis for data persistance?)
    expose api to filter data collected
  Visualizer
    d3.js based frontend for server w/ directional force diagram
      hover nodes: see traffic & health of individual services (separated w/ ip addresses)
      hover arrows: see traffic & health of connection between services

REQUIREMENTS
  libcurl
  libpcap
  nodejs
  d3.js

AGENT
  BUILD: cc -Wall agent.c pcap_conf.c dev_addr.c http_packet_parser.c http_post.c json_event.c json_batch.c -lpcap -lcurl -o agent_mac
  USAGE: ./agent <PORT_1=SERVICE_NAME_1> ... <PORT_N=SERVICE_NAME_N> <dev> (dev optional)

RUN SERVER
  npm install
  node server.js

REFERENCES
  http://www.tcpdump.org/sniffex.c
  http://curl.haxx.se/libcurl/c/http-post.html
  http://bl.ocks.org/d3noob/5155181
